pplci <- pp - qnorm( 0.975) * sqrt(pp * ( 1-pp )/ 872)
pphci <- pp + qnorm( 0.975) * sqrt(pp * ( 1-pp )/ 872)
pplci; pphci
# Propability of participation depending on foreign status
table( df$participation, df$foreig )
margin.table(table(df$participation, df$foreig),2)
prop.table( table( df$participation, df$foreig ),2 )
prop.test( c(254, 147), c(656, 216), correct = F)
hist(df$income,freq=F,breaks=10)
m=mean(df$income);std=sd(df$income);m;std
curve(dnorm(x,m,std),col="red",lwd=2,add=T)
library(lmtest)
dwtest(income~1,data=df)
shapiro.test(df$income)
stripchart(df$income~df$participation,method="stack",xlab="Income vs Participation",pch=19,col=3,main="Dotplot prestige in SwissLabor")
# Test on means for k=3 groups defined by type
oneway.test(df$income~df$participation) # Parametric test: normal data (Y)
kruskal.test(df$income~df$participation)
# Test on variances for k=3 groups defined by type
bartlett.test(income~participation,data=df) # Parametric test: normal data (Y)
fligner.test(income~participation,data=df)
bptest(income~participation,data=df) # Breusch Pagan Test: popular in econometrics
# Bootstrap
# Basic Bootstrap procedure
# 95% for income median
library(boot)
median.fun <- function( data, idx ) { dv<-data[ idx, "income"];median( dv )}
bootstrapdis <- boot( SwissLabor, median.fun, R = 500)
bootstrapdis$t
plot( bootstrapdis )
setwd("/home/acraf/Desktop/SIM/Laboratory SLR-20221010")
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
load("Anscombe73raw.RData")
ls()
anscombe
attach(anscombe)
summary(anscombe)
# Set A
par(mfrow=c(1,1))
plot(XA,YA,pch=19)
ma<-lm(YA~XA,data=anscombe)
ls()
summary(ma)
lines(XA,fitted.values(ma))
text(XA,YA,labels=row.names(anscombe),adj=-1)
par(mfrow=c(2,2))
plot(ma)
# Set B
par(mfrow=c(1,1))
plot(XB,YB,pch=19,col="red")
mb<-lm(YB~XB,data=anscombe)
lines(XB,fitted(mb),col="red")
ls()
summary(mb)
par(mfrow=c(2,2))
plot(mb)
mbb<-lm(YB~XB+I(XB^2),data=anscombe)
summary(mbb)
plot(YB~XB,pch=19,col="red")
# Set A
par(mfrow=c(1,1))
plot(XA,YA,pch=19)
ma<-lm(YA~XA,data=anscombe)
ls()
summary(ma)
lines(XA,fitted.values(ma))
text(XA,YA,labels=row.names(anscombe),adj=-1)
par(mfrow=c(2,2))
plot(ma)
summary(anscombe)
# Set A
par(mfrow=c(1,1))
plot(XA,YA,pch=19)
ma<-lm(YA~XA,data=anscombe)
ls()
# Set A
par(mfrow=c(1,1))
plot(XA,YA,pch=19)
ls()
summary(ma)
ma<-lm(YA~XA,data=anscombe)
ls()
summary(ma)
lines(XA,fitted.values(ma))
text(XA,YA,labels=row.names(anscombe),adj=-1)
par(mfrow=c(2,2))
plot(ma)
# Set B
par(mfrow=c(1,1))
plot(XB,YB,pch=19,col="red")
mb<-lm(YB~XB,data=anscombe)
lines(XB,fitted(mb),col="red")
# Set B
par(mfrow=c(1,1))
plot(XB,YB,pch=19,col="red")
mb<-lm(YB~XB,data=anscombe)
lines(XB,fitted(mb),col="red")
(mb)
(mb)
(mb)
par(mfrow=c(2,2))
plot(mb)
mbb<-lm(YB~XB+I(XB^2),data=anscombe)
summary(mbb)
# Set C
par(mfrow=c(1,1))
plot(XC,YC,pch=19,col="darkgreen")
text(XC,YC,label=row.names(anscombe),col="darkgreen",adj=1.5)
mc<-lm(YC~XC,data=anscombe)
lines(XC,fitted(mc),col="darkgreen")
ls()
summary(mc)
par(mfrow=c(2,2))
plot(mc)
library(car)
Boxplot(resid(mc),col="darkgreen")
cooks.distance(mc)
cooks.distance(mc)
Boxplot(resid(mc),col="darkgreen")
cooks.distance(mc)
Boxplot(cooks.distance(mc),col="darkgreen")
mcc<-lm(YC~XC,data=anscombe[-3,])
summary(mcc)
df <-anscombe[-3,]
plot(df$XC,df$YC,pch=19,col="darkgreen")
text(df$XC,df$YC,label=row.names(df),col="darkgreen",adj=1.5)
text(df$XC,df$YC,label=row.names(df),col="darkgreen",adj=1.5)
text(df$XC,df$YC,label=row.names(df),col="darkgreen",adj=1.5)
text(df$XC,df$YC,label=row.names(df),col="darkgreen",adj=1.5)
text(df$XC,df$YC,label=row.names(df),col="darkgreen",adj=1.5)
text(df$XC,df$YC,label=row.names(df),col="darkgreen",adj=1.5)
library(car)
Prestige
df <- Prestige
qchisq(0.025,101)
qchisq(0.975,101)
setwd("/home/acraf/Desktop/SIM/Laboratory SLR-20221010")
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
load("Anscombe73raw.RData")
ls()
anscombe
attach(anscombe)
summary(anscombe)
# Set A
par(mfrow=c(1,1))
plot(XA,YA,pch=19)
ma<-lm(YA~XA,data=anscombe)
ls()
summary(ma)
lines(XA,fitted.values(ma))
text(XA,YA,labels=row.names(anscombe),adj=-1)
par(mfrow=c(2,2))
plot(ma)
# Set C
par(mfrow=c(1,1))
plot(XC,YC,pch=19,col="darkgreen")
text(XC,YC,label=row.names(anscombe),col="darkgreen",adj=1.5)
mc<-lm(YC~XC,data=anscombe)
lines(XC,fitted(mc),col="darkgreen")
ls()
summary(mc)
Boxplot(resid(mc),col="darkgreen")
cooks.distance(mc)
Boxplot(cooks.distance(mc),col="darkgreen")
mcc<-lm(YC~XC,data=anscombe[-3,])
summary(mcc)
df <-anscombe[-3,]
plot(df$XC,df$YC,pch=19,col="darkgreen")
text(df$XC,df$YC,label=row.names(df),col="darkgreen",adj=1.5)
resid(md)
# Set D
par(mfrow=c(1,1))
plot(XD,YD,pch=19,col="blue")
text(XD,YD,label=row.names(anscombe),col="blue",adj=1.5)
md<-lm(YD~XD,data=anscombe)
lines(XD,fitted(md),col="blue")
ls()
summary(md)
par(mfrow=c(2,2))
plot(md)
resid(md)
cooks.distance(md)
hatvalues(md)
mdd<-lm(YD~XD,data=anscombe[-8,])
summary(mdd)
mean(YD[-8])
df <-anscombe[-8,]
plot(df$XD,df$YD,pch=19,col="darkgreen")
text(df$XD,df$YD,label=row.names(df),col="darkgreen",adj=1.5)
lines(XA,fitted.values(ma))
text(XA,YA,labels=row.names(anscombe),adj=-1)
par(mfrow=c(2,2))
plot(ma)
cooks.distance(mc)
Boxplot(cooks.distance(mc),col="darkgreen")
### ProspecciÃ³ dels jocs de dades A,B,C,D
par(mfrow=c(2,2))
anscombe.lmA <- lm(anscombe$YA ~ anscombe$XA, data=anscombe)
plot(anscombe$XA, anscombe$YA,pch=19,col=1)
lines(anscombe$XA,anscombe.lmA$fitted.values, col=1, lty=3,lwd=2)
text(x=anscombe$XA,y=anscombe$YA,labels=row.names(anscombe),adj=1.1, col=1)
anscombe.lmB <- lm(anscombe$YB ~ anscombe$XB, data=anscombe)
plot(anscombe$XB, anscombe$YB,pch=19,col=2)
lines(anscombe$XB,anscombe.lmB$fitted.values, col=2, lty=3,lwd=2)
text(x=anscombe$XB,y=anscombe$YB,labels=row.names(anscombe),adj=1.1, col=2)
anscombe.lmC <- lm(anscombe$YC ~ anscombe$XC, data=anscombe)
plot(anscombe$XC, anscombe$YC,pch=19,col=3)
lines(anscombe$XC,anscombe.lmC$fitted.values, col=3, lty=3,lwd=2)
text(x=anscombe$XC,y=anscombe$YC,labels=row.names(anscombe),adj=1.1, col=3)
anscombe.lmD <- lm(anscombe$YD ~ anscombe$XD, data=anscombe)
plot(anscombe$XD, anscombe$YD,pch=19,col=4)
lines(anscombe$XD,anscombe.lmD$fitted.values, col=4, lty=3,lwd=2)
text(x=anscombe$XD,y=anscombe$YD,labels=row.names(anscombe),adj=1.1, col=4)
# Set C
par(mfrow=c(1,1))
plot(XC,YC,pch=19,col="darkgreen")
text(XC,YC,label=row.names(anscombe),col="darkgreen",adj=1.5)
mc<-lm(YC~XC,data=anscombe)
lines(XC,fitted(mc),col="darkgreen")
cooks.distance(mc)
cooks.distance(mc)
Boxplot(cooks.distance(mc),col="darkgreen")
mcc<-lm(YC~XC,data=anscombe[-3,])
summary(mcc)
summary(mcc)
df <-anscombe[-3,]
plot(df$XC,df$YC,pch=19,col="darkgreen")
text(df$XC,df$YC,label=row.names(df),col="darkgreen",adj=1.5)
library(GGally)
install.packages("data.table")
library(data.table)
library(car)
library(rpart)
library(chemometrics)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#load data
df <- read.csv("insurance.csv")
is.null(df) #no nulls in the data
replace(ddf,which(ddf %like% " "),'')
is.null(df) #no nulls in the data
replace(ddf,which(ddf %like% " "),'')
is.null(df) #no nulls in the data
#replace(ddf,which(ddf %like% " "),'')
replace(df,which(df %like% " "), '') #close all blank spaces
which(df=="") #no blanks found in the data
#check for distinct values and whether there are differences in them
unique(df$sex) #expecting 2 values
unique(df$smoker) #expecting 2 values
unique(df$region) #expecting 4 values
#we can see that data is consistent for categorial variables
df$f.sex <- factor(df$sex,labels = c("female","male"));
df$f.smoker <- factor(df$smoker,labels = c("no","yes"))
df$f.region <- factor(df$region,labels = c("northeast","northwest","southeast","southwest"))
summary(df) #from the summary we can see the factor values, it seems that sex and region are distributed equally and not much smokers compare to the non smokers.
dim(df)
unique(df)
#There is only one observation which repeat twice, it makes sense that a person with the same properties will have the same charge and since it's only one I decide to leave it there.
#outliers
par(mfrow=c(1,1))
Boxplot(df$charges)
Boxplot(df$bmi)
#we can see extreme outliers for both charges and bmi, since it's just serval observation it might be the case that for a certain bmi, age or smokers the charge value is raising by a lot compare to the rest. from looking at the high value of column charges it can be seen that all are smokers and mid-high bmi, also some of the ages I see are relatively high.
#infering from graphs
res.out<-Moutlier(df[,c(7,3)],quantile=0.975)
str(res.out)
plot(df$charges,df$bmi)
summary(df)
#numeric variables
summary(df[,c(3,7)])
plot(df[,c(3,7)])
ggpairs(df[,c(3,7)])
#categorical variables
summary(df[,c(1,4,8:10)])
#from the summary we can see the factor values, it seems that sex and region are distributed equally and not much smokers compare to the non smokers. age and number of children looks about right and there is values in a range that makes sense.
which(res.out$md > res.out$cutoff)
plot( res.out$md, res.out$rd )
str(res.out)
plot(df$charges,df$bmi)
which(res.out$md > res.out$cutoff)
plot( res.out$md, res.out$rd )
library(GGally)
#install.packages("data.table")
library(data.table)
library(car)
library(rpart)
library(chemometrics)
#install.packages("mvoutlier")
library(mvoutlier)
library(sgeostat)
library(lmtest)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#load data
df <- read.csv("insurance.csv")
is.null(df) #no nulls in the data
replace(df,which(df %like% " "), '') #close all blank spaces
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#load data
df <- read.csv("insurance.csv")
setwd("~/Desktop/SIM/project/SIM---Assignment1")
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#load data
df <- read.csv("insurance.csv")
is.null(df) #no nulls in the data
replace(df,which(df %like% " "), '') #close all blank spaces
which(df=="") #no blanks found in the data
#check for distinct values and whether there are differences in them
unique(df$sex) #expecting 2 values
unique(df$smoker) #expecting 2 values
unique(df$region) #expecting 4 values
#we can see that data is consistent for categorical variables
df$f.sex <- factor(df$sex,labels = c("female","male"));
df$f.smoker <- factor(df$smoker,labels = c("no","yes"))
df$f.region <- factor(df$region,labels = c("northeast","northwest","southeast","southwest"))
summary(df) #from the summary we can see the factor values, it seems that sex and region are distributed equally and not much smokers compare to the non smokers.
dim(df)
unique(df)
#There is only one observation which repeat twice, it makes sense that a person with the same properties will have the same charge and since it's only one we decide to leave it there.
#outliers
par(mfrow=c(1,2))
Boxplot(df$charges)
Boxplot(df$bmi)
#we can see extreme outliers for both charges and bmi, since it's just serval observation it might be the case that for a certain bmi, age or smokers the charge value is raising by a lot compare to the rest. from looking at the high value of column charges it can be seen that all are smokers and mid-high bmi, also some of the ages I see are relatively high.
#infering from graphs
res.out<-Moutlier(df[,c(7,3)],quantile=0.975)
str(res.out)
plot(df$charges,df$bmi)
res.out$cutoff
quantile(res.out$md,seq(0,1,0.025))
which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff))
ddf <-df[which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff)),]
summary(df)
summary(ddf)
View(ddf)
##When looking at the results of the multivariate outliers we see that all the highest charges are for smokers for 43 out 45 identified outliers. In addition, there are 2 more observations where the objects are not smokers but they have a very high bmi, one of them is the highest value in the data set and the other is not too far from it.
plot( res.out$md, res.out$rd )
#text(res.out$md, res.out$rd, labels=rownames(df),adj=1, cex=0.5)
abline(h=res.out$cutoff, col="red")
abline(v=res.out$cutoff, col="red")
#I NEED TO REMEMBER HOW TO INTERPETE THIS PLOT - I KNOW THAT WHATEVER ABOVE THE CUTOFF IS A MULTIVARIATE OUTLIER BUT SINCE MY EXPLANATION ABOVE WE ARE NOT GOING TO DELETE THEM OF IMPUTE THEM CAUSE WE HAVE EXPLNATION.
res.out$cutoff^2
qchisq(0.975,4)
aq.plot(df[,c(3,7)],delta = qchisq(0.95,df=ncol(x)),alpha = 0.05)
summary(df)
#numeric variables
summary(df[,c(3,7)])
plot(df[,c(3,7)])
ggpairs(df[,c(3,7)])
#categorical variables
summary(df[,c(1,4,8:10)])
colSums(is.na(df))
##When looking at the results of the multivariate outliers we see that all the highest charges are for smokers for 43 out 45 identified outliers. In addition, there are 2 more observations where the objects are not smokers but they have a very high bmi, one of them is the highest value in the data set and the other is not too far from it.
plot( res.out$md, res.out$rd )
#text(res.out$md, res.out$rd, labels=rownames(df),adj=1, cex=0.5)
abline(h=res.out$cutoff, col="red")
abline(v=res.out$cutoff, col="red")
# check missing data
sum(colSums(is.na(df)))
# check missing data
colSums(is.na(df))
ml <- lm(df$charges~df$bmi)
summary(ml)
plot(df$charges~df$bmi)
lines(df$charges,fitted(ml),col="darkgreen")
ml <- lm(df$charges~df$bmi)
summary(ml)
plot(df$charges~df$bmi)
lines(df$charges,fitted(ml),col="darkgreen")
plot(charges~bmi, data=df)
lines(charges,fitted(ml),col="darkgreen")
par(mfrow=c(1,1))
plot(bmi,charges,pch=19,col="darkgreen")
text(bmi,charges,label=row.names(df),col="darkgreen",adj=1.5, data=df)
par(mfrow=c(1,1))
plot(bmi,charges,pch=19,col="darkgreen")
plot(bmi,charges,pch=19,col="darkgreen", data=df)
par(mfrow=c(1,1))
plot(df$bmi,df$charges,pch=19,col="darkgreen")
text(df$bmi,df$charges,label=row.names(df),col="darkgreen",adj=1.5)
mc<-lm(df$bmi~df$charges)
lines(df$charges,fitted(mc),col="red")
ls()
summary(mc)
library(car)
cooks.distance(mc)
cooks.distance(mc)
Boxplot(cooks.distance(mc),col="darkgreen")
resid(mc)
hatvalues(mc)
cooksd <- cooks.distance(mc)
sample_size <- nrow(df)
Boxplot(cooks.distance(mc),col="darkgreen")
influential <- as.numeric(names(cooksd)[(cooksd > (4/sample_size))])
df_ni <- df[-influential, ]
par(mfrow=c(1,1))
plot(df_ni$bmi,df_ni$charges,pch=19,col="darkgreen")
text(df_ni$bmi,df_ni$charges,label=row.names(df),col="darkgreen",adj=1.5)
lines(df_ni$charges,fitted(mc),col="red")
lines(df_ni$charges,fitted(mc),col="red")
ls()
summary(mc)
par(mfrow=c(1,1))
plot(df$bmi,df$charges,pch=19,col="darkgreen")
text(df$bmi,df$charges,label=row.names(df),col="darkgreen",adj=1.5)
mc<-lm(df$bmi~df$charges)
lines(df$charges,fitted(mc),col="red")
ls()
summary(mc)
cooksd <- cooks.distance(mc)
sample_size <- nrow(df)
Boxplot(cooks.distance(mc),col="darkgreen")
influential <- as.numeric(names(cooksd)[(cooksd > (4/sample_size))])
df_ni <- df[-influential, ]
plot3 <- ggplot(data = df, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = mc) +
xlim(0, 20) + ylim(0, 220) +
ggtitle("Before")
plot4 <- ggplot(data = cars2_screen, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = mc) +
xlim(0, 20) + ylim(0, 220) +
ggtitle("After")
plot3 <- ggplot(data = df, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = mc) +
xlim(0, 20) + ylim(0, 220) +
ggtitle("Before")
plot4 <- ggplot(data = cars2_screen, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = mc) +
xlim(0, 20) + ylim(0, 220) +
ggtitle("After")
plot3 <- ggplot(data = df, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = mc) +
xlim(0, 20) + ylim(0, 220) +
ggtitle("Before")
plot4 <- ggplot(data = df_ni, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = mc) +
xlim(0, 20) + ylim(0, 220) +
ggtitle("After")
gridExtra::grid.arrange(plot3, plot4, ncol=2)
par(mfrow=c(1,1))
plot(df$bmi,df$charges,pch=19,col="darkgreen")
text(df$bmi,df$charges,label=row.names(df),col="darkgreen",adj=1.5)
mc<-lm(df$bmi~df$charges)
lines(df$charges,fitted(mc),col="red")
ls()
summary(mc)
# the RSquared is very low and there is a lot of residual standard error. The model is not performing very good as for now so maybe studying influential data could help to improve it
library(car)
cooksd <- cooks.distance(mc)
sample_size <- nrow(df)
Boxplot(cooks.distance(mc),col="darkgreen")
influential <- as.numeric(names(cooksd)[(cooksd > (4/sample_size))])
df_ni <- df[-influential, ]
par(mfrow=c(1,1))
plot(df_ni$bmi,df_ni$charges,pch=19,col="darkgreen")
text(df_ni$bmi,df_ni$charges,label=row.names(df),col="darkgreen",adj=1.5)
mc_ni<-lm(df_ni$bmi~df_ni$charges)
lines(df_ni$charges,fitted(mc_ni),col="red")
ls()
summary(mc_ni)
plot3 <- ggplot(data = df, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = mc) +
xlim(0, 20) + ylim(0, 220) +
ggtitle("Before")
plot4 <- ggplot(data = df_ni, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = mc) +
xlim(0, 20) + ylim(0, 220) +
ggtitle("After")
gridExtra::grid.arrange(plot3, plot4, ncol=2)
#there are a lot of ifluentential data that could be removed
prop.test(c(60,110), n=c(100,200), conf.level=0.99, correct=F, alternative="greater") # H0 can not be rejected at 1%
Boxplot( df[,c(3:9)])
# Load Required Packages: to be increased over the course
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","effects","FactoMineR","car","factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr","chemometrics","rpart","ROCR","corrr","readxl","RColorBrewer","ggplot2","corrplot","plotly","xlsx","reshape2","scales","stargazer","kableExtra")
package.check <- lapply(requiredPackages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
search()
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
setwd("C:/Users/lmontero/Dropbox/DOCENCIA/MUM-DATS/EXAMS/CURS21-22")
