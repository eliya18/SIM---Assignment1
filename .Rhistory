?replace
# Chunk 1
library(GGally)
#install.packages("data.table")
library(data.table)
library(car)
library(rpart)
library(chemometrics)
#install.packages("mvoutlier")
library(mvoutlier)
library(sgeostat)
library(lmtest)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#load data
df <- read.csv("insurance.csv")
# Chunk 3
is.null(df) #no nulls in the data
replace(df,which(df %like% " "), '') #close all blank space
which(df=="") #no blanks found in the data
#check for distinct values and whether there are differences in them
unique(df$sex) #expecting 2 values
unique(df$smoker) #expecting 2 values
unique(df$region) #expecting 4 values
#we can see that data is consistent for categorical variables
df$f.sex <- factor(df$sex,labels = c("female","male"));
df$f.smoker <- factor(df$smoker,labels = c("no","yes"))
df$f.region <- factor(df$region,labels = c("northeast","northwest","southeast","southwest"))
summary(df) #from the summary we can see the factor values, it seems that sex and region are distributed equally and not much smokers compare to the non smokers.
dim(df)
unique(df)
#There is only one observation which repeat twice, it makes sense that a person with the same properties will have the same charge and since it's only one we decide to leave it there.
#outliers
# Chunk 4
par(mfrow=c(1,2))
Boxplot(df$charges)
Boxplot(df$bmi)
Boxplot(df$age)
Boxplot(df$children)
#
# treat outliers for charges variable
sevout<-quantile(df$charges,0.75,na.rm=TRUE)+3*(quantile(df$charges,0.75,na.rm=TRUE)-quantile(df$charges,0.25,na.rm=TRUE))
sevout
sev_out_lower <- quantile(df$charges,0.25,na.rm=TRUE)-3*(quantile(df$charges,0.75,na.rm=TRUE)-quantile(df$charges,0.25,na.rm=TRUE))
mist<-quantile(df$charges,0.75,na.rm=TRUE)+1.5*(quantile(df$charges,0.75,na.rm=TRUE)-quantile(df$charges,0.25,na.rm=TRUE))
mist
mist_out_lower <- quantile(df$charges,0.25,na.rm=TRUE)-1.5*(quantile(df$charges,0.75,na.rm=TRUE)-quantile(df$charges,0.25,na.rm=TRUE))
# get list of outliers
loutse<-which(df$charges>sevout);length(loutse)
loutmist <-which(df$charges>mist);length(loutmist)
low_out_sever <- which(df$charges<sev_out_lower);low_out_sever
low_out_mild <- which(df$charges<mist_out_lower);low_out_mild
#table(loutse)
#table(loutmist)
# see outliers
Boxplot(df$charges)
abline(h=sevout,col="red")
abline(h=mist,col="yellow")
# Since there are only 6 severe outliers, we will remove them from the dataset,
df <- df[-which(df$charges >= sevout),]
# check severe outliers for bmi atrribute
sevout_bmi<-quantile(df$bmi,0.75,na.rm=TRUE)+3*(quantile(df$bmi,0.75,na.rm=TRUE)-quantile(df$bmi,0.25,na.rm=TRUE));sevout_bmi
mist_bmi <- quantile(df$bmi,0.75,na.rm=TRUE)+1.5*(quantile(df$bmi,0.75,na.rm=TRUE)-quantile(df$bmi,0.25,na.rm=TRUE))
loutse_bmi<-which(df$bmi>sevout_bmi);length(loutse_bmi) # no severe outliers for bmi
colSums(is.na(df))
serout_lower_bmi <- quantile(df$bmi,0.25,na.rm=TRUE)-3*(quantile(df$bmi,0.75,na.rm=TRUE)-quantile(df$bmi,0.25,na.rm=TRUE));serout_lower_bmi
mist_lower_bmi <- quantile(df$bmi,0.25,na.rm=TRUE)-1.5*(quantile(df$bmi,0.75,na.rm=TRUE)-quantile(df$bmi,0.25,na.rm=TRUE));mist_lower_bmi
up_sever_bmi <- which(df$bmi > sevout_bmi); up_sever_bmi
up_mild_bmi <- which(df$bmi > mist_bmi); up_mild_bmi
low_sever_bmi <- which(df$bmi < serout_lower_bmi); low_sever_bmi
low_mild_bmi <- which(df$bmi < mist_lower_bmi); low_mild_bmi
# Chunk 5
res.out<-Moutlier(df[,c(7,3,1,4)],quantile=0.999)
#str(res.out)
plot(df$charges,df$bmi)
res.out$cutoff
#quantile(res.out$md,seq(0,1,0.001))
which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff))
plot( res.out$md, res.out$rd )
#text(res.out$md, res.out$rd, labels=rownames(df),adj=1, cex=0.5)
abline(h=res.out$cutoff, col="red")
abline(v=res.out$cutoff, col="red")
df <- df[-which(res.out$md > res.out$cutoff & res.out$rd > res.out$cutoff),]
# Chunk 6
# check missing data
colSums(is.na(df))
# Chunk 7
summary(df)
# Chunk 8
plot(df$children~df$age)
# Chunk 9
thr2five_children <- which(df$age <= 20 & df$children>2)
thr2five_children
# Chunk 10
df <- df[-thr2five_children,]
# Chunk 11
plot(df$bmi~df$age)
# Chunk 12
summary(df)
# Chunk 13
summary(df)
#numeric variables
summary(df[,c(1,3,4,7)])
#plot(df[,c(1,3,4,7)])
ggpairs(df[,c(1,3,4,7)])
#categorical variables
summary(df[,c(1,4,8:10)])
# Chunk 14
# Density plot to check the distribution
ggpubr::ggdensity(df$charges,  fill = "lightgray", add = "mean",  xlab = "charges variable density")
# Shapiro Test to asses that data on response variable is normaly distribution
# H0 = Data is normally distributed
# H1 = Data is not normally distributed
# alfa = 0.05
shapiro.test(df$charges)
# Chunk 15
# Density plot to check the distribution
ggpubr::ggdensity(log(df$charges),  fill = "lightgray", add = "mean",  xlab = "charges variable density")
# Shapiro Test to asses that data on response variable is normaly distribution
# H0 = Data is normally distributed
# H1 = Data is not normally distributed
# alfa = 0.05
shapiro.test(log(df$charges))
# Chunk 16
par(mfrow=c(1,1))
acf(df$charges)
dwtest(df$charges~1)
# Chunk 17
#library(DataExplorer)
#create_report(df, y= "charges")
library(FactoMineR)
res.con <- condes(df[,c(1,3,4,7,8:10)], num.var = 4 , proba = 0.01 )
res.con$quanti
res.con$quali
res.con$category
# Chunk 18
res.cat <- catdes(df[,c(9,3,4,7,8, 1, 10)], num.var = 1 , proba = 0.01 )
res.cat$quanti
res.cat$category
res.cat$quanti.var
# Chunk 19
par(mfrow=c(1,1))
#plot(df$charges,df$bmi,pch=19)
#text(df$charges,df$bmi,label=row.names(df),col="darkgreen",adj=1.5)
m1<-lm(charges~bmi+age+children, data = df)
summary(m1)
lines(df$bmi,fitted(m1),col="red")
par(mfrow=c(2,2))
plot(m1)
par(mfrow=c(1,1))
# Chunk 20
car::vif(m1)
# Chunk 21
library(MASS)
boxcox(charges~bmi+age+children, data = df)
# Chunk 22
# (only for numerical variables)
boxTidwell(log(charges) ~ bmi + age +  I(children+0.5), data=df)
# poly(age,3) for adding ortogonal polynomial
# Chunk 23
par(mfrow=c(1,1))
# apply logarithm to the charges variable
#plot(log(df$charges),df$bmi,pch=19)
m2 <- lm(log(charges)~bmi+ age+children, data = df)
lines(df$bmi, fitted(m2), color="red")
summary(m2)
par(mfrow=c(2,2))
plot(m2)
par(mfrow=c(1,1))
# Chunk 24
avPlots(m2)
# Chunk 25
AIC(m1,m2)
# Chunk 26
library(car)
influencePlot(m2)
# there are a lot of influential data
# With cooks distance
cooksD <- cooks.distance(m2)
n <- nrow(df)
plot(cooksD, main = "Cooks Distance for Influential Obs")
abline(h = 4/n, lty = 2, col = "steelblue") # add cutoff line
influential_obs <- as.numeric(names(cooksD)[(cooksD > (4/n))])
influential_obs
length(influential_obs)
m3 <- lm(log(charges)~bmi+age+children, data=df[-influential_obs,])
summary(m3)
par(mfrow=c(2,2))
plot(m3)
par(mfrow=c(1,1))
influencePlot(m3)
# Chunk 27
#create scatterplot with influential data present
outliers_present <- ggplot(data = df, aes(x = bmi + age + children, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
#  ylim(0, 200) +
ggtitle("Ifluential data Present")
#create scatterplot with influential data removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = bmi + age + children, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
#  ylim(0, 200) +
ggtitle("Influential data Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
# Chunk 28
summary(df)
m4 <- lm(log(charges)~bmi+age+children+f.sex+f.smoker+f.region, data=df[-influential_obs,])
summary(m4)
# Chunk 29
Anova(m4)
m5 <- step( m4 )
summary(m5)
par( mfrow = c(2,2))
plot( m5, id.n=0 )
par( mfrow = c(1,1))
# Chunk 30
df$age_range <- cut(df$age, breaks = quantile(df$age,probs = c(0,0.5,1)), include.lowest = T)
summary(df)
# Chunk 31
m6 <- lm(log(charges)~bmi+children+f.sex+f.smoker+f.region+age_range, data=df[-influential_obs,])
summary(m6)
par( mfrow = c(2,2))
plot( m6, id.n=0 )
par( mfrow = c(1,1))
# Chunk 32
AIC(m5,m6)
# Chunk 33
m7 <- lm(log(charges)~bmi+age
+children * (f.sex+f.smoker+f.region), data=df[-influential_obs,])
summary(m7)
m8 <- step(m7) # see which is the best combination
summary(m8)
par( mfrow = c(2,2))
plot( m8, id.n=0 )
par( mfrow = c(1,1))
# Chunk 34
library(effects)
plot(allEffects(m8))
# Chunk 35
library(car)
residualPlot(m8)
influencePlot(m8)
# there are a lot of influential data
influential_after_iteractions <- which(rownames(df) %in% c("517","1028", "220", "431"))
influential_after_iteractions
influential_obs <- c(influential_obs, influential_after_iteractions)
m9 <- lm(log(charges)~bmi+age+children+children * (f.sex+f.smoker+f.region), data=df[-influential_obs,])
summary(m9)
par(mfrow=c(2,2))
plot(m9)
par(mfrow=c(1,1))
avPlots(m8)
# Chunk 1
library(GGally)
#install.packages("data.table")
library(data.table)
library(car)
library(rpart)
library(chemometrics)
#install.packages("mvoutlier")
library(mvoutlier)
library(sgeostat)
library(lmtest)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#load data
df <- read.csv("insurance.csv")
# Chunk 3
is.null(df) #no nulls in the data
replace(df,which(df %like% " "), '') #close all blank space
which(df=="") #no blanks found in the data
#check for distinct values and whether there are differences in them
unique(df$sex) #expecting 2 values
unique(df$smoker) #expecting 2 values
unique(df$region) #expecting 4 values
#we can see that data is consistent for categorical variables
df$f.sex <- factor(df$sex,labels = c("female","male"));
df$f.smoker <- factor(df$smoker,labels = c("no","yes"))
df$f.region <- factor(df$region,labels = c("northeast","northwest","southeast","southwest"))
summary(df) #from the summary we can see the factor values, it seems that sex and region are distributed equally and not much smokers compare to the non smokers.
dim(df)
unique(df)
#There is only one observation which repeat twice, it makes sense that a person with the same properties will have the same charge and since it's only one we decide to leave it there.
#outliers
# Chunk 4
par(mfrow=c(1,2))
Boxplot(df$charges)
Boxplot(df$bmi)
Boxplot(df$age)
Boxplot(df$children)
#
# treat outliers for charges variable
sevout<-quantile(df$charges,0.75,na.rm=TRUE)+3*(quantile(df$charges,0.75,na.rm=TRUE)-quantile(df$charges,0.25,na.rm=TRUE))
sevout
sev_out_lower <- quantile(df$charges,0.25,na.rm=TRUE)-3*(quantile(df$charges,0.75,na.rm=TRUE)-quantile(df$charges,0.25,na.rm=TRUE))
mist<-quantile(df$charges,0.75,na.rm=TRUE)+1.5*(quantile(df$charges,0.75,na.rm=TRUE)-quantile(df$charges,0.25,na.rm=TRUE))
mist
mist_out_lower <- quantile(df$charges,0.25,na.rm=TRUE)-1.5*(quantile(df$charges,0.75,na.rm=TRUE)-quantile(df$charges,0.25,na.rm=TRUE))
# get list of outliers
loutse<-which(df$charges>sevout);length(loutse)
loutmist <-which(df$charges>mist);length(loutmist)
low_out_sever <- which(df$charges<sev_out_lower);low_out_sever
low_out_mild <- which(df$charges<mist_out_lower);low_out_mild
#table(loutse)
#table(loutmist)
# see outliers
Boxplot(df$charges)
abline(h=sevout,col="red")
abline(h=mist,col="yellow")
# Since there are only 6 severe outliers, we will remove them from the dataset,
df <- df[-which(df$charges >= sevout),]
# check severe outliers for bmi atrribute
sevout_bmi<-quantile(df$bmi,0.75,na.rm=TRUE)+3*(quantile(df$bmi,0.75,na.rm=TRUE)-quantile(df$bmi,0.25,na.rm=TRUE));sevout_bmi
mist_bmi <- quantile(df$bmi,0.75,na.rm=TRUE)+1.5*(quantile(df$bmi,0.75,na.rm=TRUE)-quantile(df$bmi,0.25,na.rm=TRUE))
loutse_bmi<-which(df$bmi>sevout_bmi);length(loutse_bmi) # no severe outliers for bmi
colSums(is.na(df))
serout_lower_bmi <- quantile(df$bmi,0.25,na.rm=TRUE)-3*(quantile(df$bmi,0.75,na.rm=TRUE)-quantile(df$bmi,0.25,na.rm=TRUE));serout_lower_bmi
mist_lower_bmi <- quantile(df$bmi,0.25,na.rm=TRUE)-1.5*(quantile(df$bmi,0.75,na.rm=TRUE)-quantile(df$bmi,0.25,na.rm=TRUE));mist_lower_bmi
up_sever_bmi <- which(df$bmi > sevout_bmi); up_sever_bmi
up_mild_bmi <- which(df$bmi > mist_bmi); up_mild_bmi
low_sever_bmi <- which(df$bmi < serout_lower_bmi); low_sever_bmi
low_mild_bmi <- which(df$bmi < mist_lower_bmi); low_mild_bmi
# Chunk 5
res.out<-Moutlier(df[,c(7,3,1,4)],quantile=0.999)
#str(res.out)
plot(df$charges,df$bmi)
res.out$cutoff
#quantile(res.out$md,seq(0,1,0.001))
which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff))
plot( res.out$md, res.out$rd )
#text(res.out$md, res.out$rd, labels=rownames(df),adj=1, cex=0.5)
abline(h=res.out$cutoff, col="red")
abline(v=res.out$cutoff, col="red")
df <- df[-which(res.out$md > res.out$cutoff & res.out$rd > res.out$cutoff),]
# Chunk 6
# check missing data
colSums(is.na(df))
# Chunk 7
summary(df)
# Chunk 8
plot(df$children~df$age)
# Chunk 9
thr2five_children <- which(df$age <= 20 & df$children>2)
thr2five_children
# Chunk 10
df <- df[-thr2five_children,]
# Chunk 11
plot(df$bmi~df$age)
# Chunk 12
summary(df)
# Chunk 13
summary(df)
#numeric variables
summary(df[,c(1,3,4,7)])
#plot(df[,c(1,3,4,7)])
ggpairs(df[,c(1,3,4,7)])
#categorical variables
summary(df[,c(1,4,8:10)])
# Chunk 14
# Density plot to check the distribution
ggpubr::ggdensity(df$charges,  fill = "lightgray", add = "mean",  xlab = "charges variable density")
# Shapiro Test to asses that data on response variable is normaly distribution
# H0 = Data is normally distributed
# H1 = Data is not normally distributed
# alfa = 0.05
shapiro.test(df$charges)
# Chunk 15
# Density plot to check the distribution
ggpubr::ggdensity(log(df$charges),  fill = "lightgray", add = "mean",  xlab = "charges variable density")
# Shapiro Test to asses that data on response variable is normaly distribution
# H0 = Data is normally distributed
# H1 = Data is not normally distributed
# alfa = 0.05
shapiro.test(log(df$charges))
# Chunk 16
par(mfrow=c(1,1))
acf(df$charges)
dwtest(df$charges~1)
# Chunk 17
#library(DataExplorer)
#create_report(df, y= "charges")
library(FactoMineR)
res.con <- condes(df[,c(1,3,4,7,8:10)], num.var = 4 , proba = 0.01 )
res.con$quanti
res.con$quali
res.con$category
# Chunk 18
res.cat <- catdes(df[,c(9,3,4,7,8, 1, 10)], num.var = 1 , proba = 0.01 )
res.cat$quanti
res.cat$category
res.cat$quanti.var
# Chunk 19
#par(mfrow=c(1,1))
#plot(df$charges,df$bmi,pch=19)
#text(df$charges,df$bmi,label=row.names(df),col="darkgreen",adj=1.5)
m1<-lm(charges~bmi+age+children, data = df)
summary(m1)
lines(df$bmi,fitted(m1),col="red")
par(mfrow=c(2,2))
plot(m1)
par(mfrow=c(1,1))
# Chunk 20
car::vif(m1)
# Chunk 21
library(MASS)
boxcox(charges~bmi+age+children, data = df)
# Chunk 22
# (only for numerical variables)
boxTidwell(log(charges) ~ bmi + age +  I(children+0.5), data=df)
# poly(age,3) for adding ortogonal polynomial
# Chunk 23
par(mfrow=c(1,1))
# apply logarithm to the charges variable
#plot(log(df$charges),df$bmi,pch=19)
m2 <- lm(log(charges)~bmi+ age+children, data = df)
lines(df$bmi, fitted(m2), color="red")
summary(m2)
par(mfrow=c(2,2))
plot(m2)
par(mfrow=c(1,1))
# Chunk 24
avPlots(m2)
# Chunk 25
AIC(m1,m2)
# Chunk 26
library(car)
influencePlot(m2)
# there are a lot of influential data
# With cooks distance
cooksD <- cooks.distance(m2)
n <- nrow(df)
plot(cooksD, main = "Cooks Distance for Influential Obs")
abline(h = 4/n, lty = 2, col = "steelblue") # add cutoff line
influential_obs <- as.numeric(names(cooksD)[(cooksD > (4/n))])
influential_obs
length(influential_obs)
m3 <- lm(log(charges)~bmi+age+children, data=df[-influential_obs,])
summary(m3)
par(mfrow=c(2,2))
plot(m3)
par(mfrow=c(1,1))
influencePlot(m3)
# Chunk 27
#create scatterplot with influential data present
outliers_present <- ggplot(data = df, aes(x = bmi + age + children, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
#  ylim(0, 200) +
ggtitle("Ifluential data Present")
#create scatterplot with influential data removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = bmi + age + children, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
#  ylim(0, 200) +
ggtitle("Influential data Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
# Chunk 28
summary(df)
m4 <- lm(log(charges)~bmi+age+children+f.sex+f.smoker+f.region, data=df[-influential_obs,])
summary(m4)
# Chunk 29
Anova(m4)
m5 <- step( m4 )
summary(m5)
par( mfrow = c(2,2))
plot( m5, id.n=0 )
par( mfrow = c(1,1))
# Chunk 30
df$age_range <- cut(df$age, breaks = quantile(df$age,probs = c(0,0.5,1)), include.lowest = T)
summary(df)
# Chunk 31
m6 <- lm(log(charges)~bmi+children+f.sex+f.smoker+f.region+age_range, data=df[-influential_obs,])
summary(m6)
par( mfrow = c(2,2))
plot( m6, id.n=0 )
par( mfrow = c(1,1))
# Chunk 32
AIC(m5,m6)
# Chunk 33
m7 <- lm(log(charges)~bmi+age
+children * (f.sex+f.smoker+f.region), data=df[-influential_obs,])
summary(m7)
m8 <- step(m7) # see which is the best combination
summary(m8)
par( mfrow = c(2,2))
plot( m8, id.n=0 )
par( mfrow = c(1,1))
# Chunk 34
library(effects)
plot(allEffects(m8))
library(car)
residualPlot(m8)
influencePlot(m8)
# there are a lot of influential data
influential_after_iteractions <- which(rownames(df) %in% c("517","1028", "220", "431"))
influential_after_iteractions
influential_obs <- c(influential_obs, influential_after_iteractions)
m9 <- lm(log(charges)~bmi+age+children+children * (f.sex+f.smoker+f.region), data=df[-influential_obs,])
summary(m9)
par(mfrow=c(2,2))
plot(m9)
par(mfrow=c(1,1))
avPlots(m8)
