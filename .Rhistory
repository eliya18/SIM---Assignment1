pplci <- pp - qnorm( 0.975) * sqrt(pp * ( 1-pp )/ 872)
pphci <- pp + qnorm( 0.975) * sqrt(pp * ( 1-pp )/ 872)
pplci; pphci
# Propability of participation depending on foreign status
table( df$participation, df$foreig )
margin.table(table(df$participation, df$foreig),2)
prop.table( table( df$participation, df$foreig ),2 )
prop.test( c(254, 147), c(656, 216), correct = F)
hist(df$income,freq=F,breaks=10)
m=mean(df$income);std=sd(df$income);m;std
curve(dnorm(x,m,std),col="red",lwd=2,add=T)
library(lmtest)
dwtest(income~1,data=df)
shapiro.test(df$income)
stripchart(df$income~df$participation,method="stack",xlab="Income vs Participation",pch=19,col=3,main="Dotplot prestige in SwissLabor")
# Test on means for k=3 groups defined by type
oneway.test(df$income~df$participation) # Parametric test: normal data (Y)
kruskal.test(df$income~df$participation)
# Test on variances for k=3 groups defined by type
bartlett.test(income~participation,data=df) # Parametric test: normal data (Y)
fligner.test(income~participation,data=df)
bptest(income~participation,data=df) # Breusch Pagan Test: popular in econometrics
# Bootstrap
# Basic Bootstrap procedure
# 95% for income median
library(boot)
median.fun <- function( data, idx ) { dv<-data[ idx, "income"];median( dv )}
bootstrapdis <- boot( SwissLabor, median.fun, R = 500)
bootstrapdis$t
plot( bootstrapdis )
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
library(car)
library(FactoMineR)
library(lmtest)
library(effects)
library(AER)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
library(car)
library(effects)
library(AER)
library(AER)
data("CPS1985")
df <- CPS1985 # df <- df[-444,] summary(df)
summary(df)
m0 <- lm(wage~education+experience+age, data=df)
summary(m0)
cor(df[,1:4])
vif(m0) #vif variance inflation factor
m1 <-lm(wage~education+experience, data=df)
summary(m1)
par(mfrow = c(2,2))
plot(m1, id.n=0)
par(mfrow=c(1,1))
plot(m1, id.n=0)
library(MASS)
boxcox(wage~education+experience, data=df)
boxcox(log(wage) ~ education + experience, data=df)
boxTidwell()
boxTidwell(log(wage) ~ education + experience, data=df)
boxTidwell(log(wage) ~ education + I(experience,0.5), data=df)
boxTidwell(log(wage) ~ education + I(experience+0.5), data=df)
m2 <- lm(log(wage) ~ I(education^²))
m2 <- lm(log(wage) ~ I(education^² +experience))
m2 <- lm(log(wage) ~ I(education^² +experience, data=df))
m2 <- lm(log(wage) ~ I(education^²) +experience, data=df
m2 <- lm(log(wage) ~ I(education^²) +experience, data=df)
m2 <- lm(log(wage) ~ I(education^2) + log(I(experience+0.5)), data=df)
summary(m2)
scatted3d(log(wage) ~ I(education^2) + log(I(experience+0.5)), data=df)
scatter3d(log(wage) ~ I(education^2) + log(I(experience+0.5)), data=df)
library(rgl)
scatter3d(log(wage) ~ I(education^2) + log(I(experience+0.5)), data=df)
install.packages("rgl")
library(rgl)
scatter3d(log(wage) ~ I(education^2) + log(I(experience+0.5)), data=df)
library(effects)
plot(allEffects(m2))
par(mfrow=c(2,2))
par(m2,id.n=0)
par(mfrow = c(1,1))
par(mfrow=c(2,2))
par(m2,id.n=0)
par( m2, id.n=0 )
plot( m2, id.n=0 )
par(mfrow = c(1,1))
plot( m2, id.n=0 )
boxplot(resid(m2))
residualPlots( m2 )
names(df)
m3 <- ml(log(wage) ~ I(education^2) + log(I(experience+0.5)) + ethnicity + region + gender + occupation + sector + union + married, data=df)
m3 <- lm(log(wage) ~ I(education^2) + log(I(experience+0.5)) + ethnicity + region + gender + occupation + sector + union + married, data=df)
summary(m3)
Anova(m3)
par(mfrow=c(2,2))
plot( m3, id.n=0 )
summary(m3)
Anova(m3)
m4 <- step(m3)
par(mfrow=c(2,2))
plot( m3, id.n=0 )
par(mfrow = c(1,1))
plot( m3, id.n=0 )
---
title: "Lab Session Nov7 202211.Rmd"
summary(m3)
# simplifing levels grouping them
df$sectother<-0
ll<-which(df$sector=="other")
df$sectother[ll]<-1
df$sectother <- factor( df$sectother, labels=c("SecOth-No","SecOth-Yes"))
table(df$occupation)
df$f.occ<-0
ll<-which(df$occupation %in% c("technical","management"))
df$f.occ[ll]<-1
df$f.occ <- factor( df$f.occ, labels=c("f.occ-Base","f.occ-TeMn"))
df$f.cauc<-0
ll<-which(df$ethnicity %in% c("cauc"))
df$f.cauc[ll]<-1
df$f.cauc <- factor( df$f.cauc, labels=c("f.cauc-No","f.cauc-Yes"))
m5 <- lm(log(wage) ~ I(education^2) + log(I(experience+0.5)) + f.cauc + region + gender + f.occ + sectother + union + married, data=df)
summary(m5)
# compare models
AIC(m3, m4, m5)
AIC(m1, m3, m4, m5)
anova(m5,m4)
library(effects)
plot(allEffects(m5))
library(effects)
plot(allEffects(m5))
library(effects)
plot(allEffects(m5))
m6 <- lm(log(wage) ~ (I(education^2) + log(I(experience+0.5))) * (f.cauc+region+gender+f.occ+sectother+union), data = df)
summary(m6)
m7 <- step(m6)
m7 <- step(m6) # MOnitoring by AIC
m8 <- step(m6, k=log(nrow(df)) # Monitoring by BIAS
plot(allEffects(m8))
plot(allEffects(m8))
m8 <- step(m6, k=log(nrow(df)) # Monitoring by BIAS
m8 <- step(m6, k=log(nrow(df))) # Monitoring by BIAS
m8 <- step(m6, k=log(nrow(df))) # Monitoring by BIAS
plot(allEffects(m8))
residualPlots( m8 )
influencePlot(m8)
cooks.distance(m8)
ll <- which(rownames(df) %in% c("170", "199")); ll
m9 <- lm(log(wage) ~ (I(education^2) + log(I(experience+0.5))) * (f.cauc+region+gender+f.occ+sectother+union), data = df[-ll,])
summary(m9)
m10 <- step(m9)
m11 <- step(m9, k=log(nrow(df)))
plot(allEffects(m11))
residualPlots(m11)
df[11,]
df[ll,]
setwd("~/Desktop/SIM/project/SIM---Assignment1")
# Chunk 1
library(GGally)
#install.packages("data.table")
library(data.table)
library(car)
library(rpart)
library(chemometrics)
#install.packages("mvoutlier")
library(mvoutlier)
library(sgeostat)
library(lmtest)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#load data
df <- read.csv("insurance.csv")
# Chunk 3
is.null(df) #no nulls in the data
replace(df,which(df %like% " "), '') #close all blank spaces
which(df=="") #no blanks found in the data
#check for distinct values and whether there are differences in them
unique(df$sex) #expecting 2 values
unique(df$smoker) #expecting 2 values
unique(df$region) #expecting 4 values
#we can see that data is consistent for categorical variables
df$f.sex <- factor(df$sex,labels = c("female","male"));
df$f.smoker <- factor(df$smoker,labels = c("no","yes"))
df$f.region <- factor(df$region,labels = c("northeast","northwest","southeast","southwest"))
summary(df) #from the summary we can see the factor values, it seems that sex and region are distributed equally and not much smokers compare to the non smokers.
dim(df)
unique(df)
#There is only one observation which repeat twice, it makes sense that a person with the same properties will have the same charge and since it's only one we decide to leave it there.
#outliers
# Chunk 4
par(mfrow=c(1,2))
Boxplot(df$charges)
Boxplot(df$bmi)
#we can see extreme outliers for both charges and bmi, since it's just serval observation it might be the case that for a certain bmi, age or smokers the charge value is raising by a lot compare to the rest. from looking at the high value of column charges it can be seen that all are smokers and mid-high bmi, also some of the ages I see are relatively high.
#infering from graphs
# treat outliers for charges variable
sevout<-quantile(df$charges,0.75,na.rm=TRUE)+3*(quantile(df$charges,0.75,na.rm=TRUE)-quantile(df$charges,0.25,na.rm=TRUE))
sevout
mist<-quantile(df$charges,0.75,na.rm=TRUE)+1.5*(quantile(df$charges,0.75,na.rm=TRUE)-quantile(df$charges,0.25,na.rm=TRUE))
mist
# get list of outliers
loutse<-which(df$charges>sevout);length(loutse)
loutmist <-which(df$charges>mist);length(loutmist)
table(loutse)
table(loutmist)
# see outliers
boxplot(df$charges)
abline(h=sevout,col="red")
abline(h=mist,col="yellow")
# Since there are only 6 severe outliers, the observations will be replaced for the median value
df[loutse, c(7)] <- median(df[,c(7)])
# check severe outliers for bmi atrribute
sevout_bmi<-quantile(df$bmi,0.75,na.rm=TRUE)+3*(quantile(df$bmi,0.75,na.rm=TRUE)-quantile(df$bmi,0.25,na.rm=TRUE))
sevout_bmi
loutse_bmi<-which(df$bmi>sevout_bmi);length(loutse_bmi) # no severe outliers for bmi
colSums(is.na(df))
# Chunk 5
# ? Maybe we should include age and children... I am not sure of this.
res.out<-Moutlier(df[,c(7,3)],quantile=0.975)
str(res.out)
plot(df$charges,df$bmi)
res.out$cutoff
quantile(res.out$md,seq(0,1,0.025))
which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff))
ddf <-df[which((res.out$md > res.out$cutoff) & (res.out$rd > res.out$cutoff)),]
summary(df)
summary(ddf)
View(ddf)
##When looking at the results of the multivariate outliers we see that all the highest charges are for smokers for 43 out 45 identified outliers. In addition, there are 2 more observations where the objects are not smokers but they have a very high bmi, one of them is the highest value in the data set and the other is not too far from it.
plot( res.out$md, res.out$rd )
#text(res.out$md, res.out$rd, labels=rownames(df),adj=1, cex=0.5)
abline(h=res.out$cutoff, col="red")
abline(v=res.out$cutoff, col="red")
#I NEED TO REMEMBER HOW TO INTERPETE THIS PLOT - I KNOW THAT WHATEVER ABOVE THE CUTOFF IS A MULTIVARIATE OUTLIER BUT SINCE MY EXPLANATION ABOVE WE ARE NOT GOING TO DELETE THEM OF IMPUTE THEM CAUSE WE HAVE EXPLNATION.
res.out$cutoff^2
qchisq(0.975,4)
aq.plot(df[,c(3,7)],delta = qchisq(0.95,df=ncol(x)),alpha = 0.05)
library(car)
influencePlot(m2)
par(mfrow=c(1,1))
# apply logarithm to the charges variable
plot(log(df$charges),df$bmi,pch=19)
m2 <- lm(log(df$charges)~df$bmi)
lines(df$bmi, fitted(m2), color="red")
summary(m2)
par(mfrow=c(2,2))
plot(m2)
par(mfrow=c(1,1))
library(car)
influencePlot(m2)
cooksd <- cooks.distance(m2)
influencePlot(m2)
ll <- which(rownames(df) %in% c("1048", "848", "1318", "443")); ll
m3 <- lm(log(df[-ll,]$charges)~df$bmi)
m3 <- lm(log(charges)~$bmi, data=df[-ll,])
m3 <- lm(log(charges)~bmi, data=df[-ll,])
summary(m3)
par(mfrow=c(2,2))
par(mfrow=c(2,2))
plot(m3)
par(mfrow=c(1,1))
AIC(m2, m3)
AIC(m1, m2)
par(mfrow=c(1,1))
plot(df$charges,df$bmi,pch=19)
#text(df$charges,df$bmi,label=row.names(df),col="darkgreen",adj=1.5)
m1<-lm(df$charges~df$bmi)
summary(m1)
lines(df$bmi,fitted(m1),col="red")
par(mfrow=c(2,2))
plot(m1)
par(mfrow=c(1,1))
par(mfrow=c(1,1))
# apply logarithm to the charges variable
plot(log(df$charges),df$bmi,pch=19)
m2 <- lm(log(df$charges)~df$bmi)
lines(df$bmi, fitted(m2), color="red")
summary(m2)
par(mfrow=c(2,2))
plot(m2)
par(mfrow=c(1,1))
AIC(m1, m2)
influencePlot(m2)
influencePlot(m3)
library(car)
influencePlot(m2)
# there are a lot of influential data
ll <- which(rownames(df) %in% c("1048", "848", "1318", "443")); ll
# lets try a new model removing the influential data found.
m3 <- lm(log(charges)~bmi, data=df[-ll,])
summary(m3)
par(mfrow=c(2,2))
plot(m3)
par(mfrow=c(1,1))
#
#
# cooksd <- cooks.distance(m2)
#
#
# sample_size <- nrow(df)
#
# Boxplot(cooks.distance(mc),col="darkgreen")
# influential <- as.numeric(names(cooksd)[(cooksd > (4/sample_size))])
# influential
#
# df_ni <- df[-influential, ]
# par(mfrow=c(1,1))
# plot(log(df_ni$charges),df_ni$bmi,pch=19,col="darkgreen")
#
# m3<-lm(log(df_ni$charges)~df_ni$bmi)
#
# lines(df_ni$charges,fitted(m3),col="red")
#
# summary(m3)
#
# par(mfrow=c(2,2))
# plot(m3)
# par(mfrow=c(1,1))
cooksD <- cooks.distance(m2)
influential <- cooksD[(cooksD > (3 * mean(cooksD, na.rm = TRUE)))]
influential
m4 <- lm(log(charges)~bmi, data=df[-influential,])
influential
which(df$charges > influential)
influential
names_of_influential <- names(influential)
outliers <- df[names_of_influential,]
df_cooksds <- df %>% anti_join(outliers)
names_of_influential <- names(influential)
names_of_influential
m4 <- lm(log(charges)~bmi, data=df[-names(influential),])
influential <- cooksD[(cooksD > (3 * mean(cooksD, na.rm = TRUE)))]
influential <- names(influential)
m4 <- lm(log(charges)~bmi, data=df[-influential,])
influential
ll <- which(rownames(df) %in% c("1048", "848", "1318", "443")); ll
n <- nrow(df)
plot(cooksD, main = "Cooks Distance for Influential Obs")
abline(h = 4/n, lty = 2, col = "steelblue") # add cutoff line
influential_obs <- as.numeric(names(cooksD)[(cooksD > (4/n))])
influential_obs
#
m4 <- lm(log(charges)~bmi, data=df[-influential_obs,])
summary(m4)
par(mfrow=c(2,2))
plot(m4)
par(mfrow=c(1,1))
influencePlot(m4)
#create scatterplot with outliers present
outliers_present <- ggplot(data = df, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Present")
#create scatterplot with outliers present
outliers_present <- ggplot(data = df, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Present")
#create scatterplot with outliers removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
#create scatterplot with outliers removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = df$bmi, y = df$charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Removed")
#create scatterplot with outliers present
outliers_present <- ggplot(data = df, aes(x = df$bmi, y = df$charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Present")
#create scatterplot with outliers removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = df$bmi, y = df$charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
#create scatterplot with outliers present
outliers_present <- ggplot(data = df, aes(x = bmi, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Present")
#create scatterplot with outliers removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = df$bmi, y = log(charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
#create scatterplot with outliers present
outliers_present <- ggplot(data = df, aes(x = bmi, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Present")
#create scatterplot with outliers removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = df$bmi, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
#create scatterplot with outliers present
outliers_present <- ggplot(data = df, aes(x = bmi, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Present")
#create scatterplot with outliers removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = df$bmi, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
#create scatterplot with outliers present
outliers_present <- ggplot(data = df, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Present")
#create scatterplot with outliers removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = df$bmi, y = charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
#create scatterplot with outliers present
outliers_present <- ggplot(data = df, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Present")
#create scatterplot with outliers removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, 200) +
ggtitle("Outliers Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
#create scatterplot with outliers present
outliers_present <- ggplot(data = df, aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = lm) +
#  ylim(0, 200) +
ggtitle("Outliers Present")
#create scatterplot with outliers removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = bmi, y = charges)) +
geom_point() +
geom_smooth(method = lm) +
#  ylim(0, 200) +
ggtitle("Outliers Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
#create scatterplot with outliers present
outliers_present <- ggplot(data = df, aes(x = bmi, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
#  ylim(0, 200) +
ggtitle("Outliers Present")
#create scatterplot with outliers removed
outliers_removed <- ggplot(data = df[-influential_obs,], aes(x = bmi, y = log(charges))) +
geom_point() +
geom_smooth(method = lm) +
#  ylim(0, 200) +
ggtitle("Outliers Removed")
#plot both scatterplots side by side
gridExtra::grid.arrange(outliers_present, outliers_removed, ncol = 2)
corr(df$charges, df$bmi)
corr(df$charges~df$bmi)
cor(df$charges~df$bmi)
cor(df$charges,df$bmi)
var <- cor(df[,c(3,7)])                                         # independent variables correlation matrix
var_inv <- ginv(var)                                       # independent variables inverse correlation matrix
?ginv
library(MASS)
var_inv <- ginv(var)                                       # independent variables inverse correlation matrix
colnames(var_inv) <- colnames(df[,c(3,7)])                      # rename the row names and column names
rownames(var_inv) <- colnames(df[,c(3,7)])
corrplot(var_inv,method='number',is.corr = F)
?corrplot
scoreplot(var_inv,method='number',is.corr = F)
scoreplot(var_inv,method='number',is.corr = F)
vif(m1)
car::vif(m1)
car::vif(m2)
car::vif(m3)
