y=which(sapply(df,is.numeric))   #posiciones de las columnas que son numéricas
n=dim(df)[1]                            #número de columnas del dataframe
N=sample(1:n,n*0.1)                   #coge el 10% de cada columna uniformemente distr.
n=length(y)                           #número de columnas numéricas
original_df = df
for (i in N){
j=sample(1:length(y),1)         #in that 10% we put NA
df[i,y[[j]]]=NA
}
str(df)
sum(is.na.data.frame(df))
n=dim(df)[2]
lost=1:n
for (i in (1:n)){
lost[i]=sum(is.na(df[,i]))
}
names(lost)=names(df)
h=barplot(lost, las=2, cex.names = 0.9, xaxt="n")
text(cex=1, x=h, y=-1.25, names(df), xpd=TRUE, srt=45, pos=2)
boxplot(df[,y])
dff=lapply(df[,y], function(x) (x - min(x, na.rm = T)) / (max(x, na.rm = T) - min(x, na.rm=T)))
boxplot(dff)
# MCAR TEST
mcar_test(as.data.frame(dff))
library(visdat)
vis_dat(df)
# We use 3
imputed=mice(df[,y], method='pmm', seed=500, maxit=15, m=3)
for (i in 1:3){
dff=complete(imputed,i)
dff=lapply(dff, function(x) (x - min(x, na.rm = T)) / (max(x, na.rm = T) - min(x, na.rm=T)))
boxplot(dff)
}
idf=complete(imputed,2)
sum(is.na.data.frame(idf))
sapply(idf, function(x) sum(is.na.data.frame(x)))
# This two colomns have constant values
idf$StandardHours=80
idf$EmployeeCount=1
sapply(idf, function(x) sum(is.na.data.frame(x)))
sum(is.na.data.frame(idf))
library(VIM)
df_imputed_KNN = kNN(df[,y], k=5)
anyNA(df_imputed_KNN)
library(missForest)
set.seed(17)
##### https://www.rdocumentation.org/packages/missForest/versions/1.4/topics/missForest
df_imputed_Forest <- missForest(df[,y], variablewise=T, verbose=T)
df_imputed_Forest <- df_imputed_Forest$ximp
df_imputed_Forest<-data.frame(df_imputed_Forest)
anyNA(df_imputed_Forest)
RMSE <- function (original, imputed) sqrt(mean((original-imputed)^2))
#RMSE <- function (x, test) sum(x)-sum(test)
x <- mapply(original_df[,y], FUN = RMSE, idf)
print(x)
sum(x)
RMSE <- function (original, imputed) sqrt(mean((original-imputed)^2))
#RMSE <- function (x, test) sum(x)-sum(test)
x <- mapply(original_df[,y], FUN = RMSE, df_imputed_Forest)
print(x)
sum(x)
RMSE <- function (original, imputed) sqrt(mean((original-imputed)^2))
#RMSE <- function (x, test) sum(x)-sum(test)
x <- mapply(original_df[,y], FUN = RMSE, df_imputed_Forest)
print(x)
sum(x)
RMSE <- function (original, imputed) sqrt(mean((original-imputed)^2))
#RMSE <- function (x, test) sum(x)-sum(test)
x <- mapply(original_df[,y], FUN = RMSE, df_imputed_KNN[,y])
#RMSE <- function (x, test) sum(x)-sum(test)
x <- mapply(original_df[,y], FUN = RMSE, df_imputed_KNN[,y])
print(x)
RMSE <- function (original, imputed) sqrt(mean((original-imputed)^2))
#RMSE <- function (x, test) sum(x)-sum(test)
x <- mapply(original_df[,y], FUN = RMSE, df_imputed_KNN)
print(x)
sum(x)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load("naniar")
pacman::p_load("mice")
df<-read.csv(file="WA_Fn-UseC_-HR-Employee-Attrition.csv")
df$Education<-factor(df$Education,levels=c(1,2,3,4,5), labels=c('Below College','College','Bachelor','Master','Doctor'))
df$EnvironmentSatisfaction<-factor(df$EnvironmentSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$JobSatisfaction<-factor(df$JobSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$JobInvolvement<-factor(df$JobInvolvement,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$PerformanceRating<-factor(df$PerformanceRating,levels=c(1,2,3,4), labels=c('Low','Good','Excellent','Outstanding'))
df$RelationshipSatisfaction<-factor(df$RelationshipSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$WorkLifeBalance<-factor(df$WorkLifeBalance,levels=c(1,2,3,4), labels=c('Bad','Good','Better','Best'))
df$JobLevel<-factor(df$JobLevel,levels=c(1,2,3,4,5), labels=c('Low','Medium','High','Very High','Highest'))
df$StockOptionLevel<-factor(df$StockOptionLevel,levels=c(0,1,2,3,4,5), labels=c('VeryLow','Low','Medium','High','Very High','Highest'))
df$Attrition[df$Attrition=="No"]=0
df$Attrition[df$Attrition=="Yes"]=1
y=which(sapply(df,is.numeric))   #posiciones de las columnas que son numéricas
n=dim(df)[1]                            #número de columnas del dataframe
N=sample(1:n,n*0.1)                   #coge el 10% de cada columna uniformemente distr.
n=length(y)                           #número de columnas numéricas
original_df = df
for (i in N){
j=sample(1:length(y),1)         #in that 10% we put NA
df[i,y[[j]]]=NA
}
str(df)
sum(is.na.data.frame(df))
n=dim(df)[2]
lost=1:n
for (i in (1:n)){
lost[i]=sum(is.na(df[,i]))
}
names(lost)=names(df)
h=barplot(lost, las=2, cex.names = 0.9, xaxt="n")
text(cex=1, x=h, y=-1.25, names(df), xpd=TRUE, srt=45, pos=2)
boxplot(df[,y])
dff=lapply(df[,y], function(x) (x - min(x, na.rm = T)) / (max(x, na.rm = T) - min(x, na.rm=T)))
boxplot(dff)
# MCAR TEST
mcar_test(as.data.frame(dff))
# We use 3
imputed=mice(df[,y], method='pmm', seed=500, maxit=15, m=3)
for (i in 1:3){
dff=complete(imputed,i)
dff=lapply(dff, function(x) (x - min(x, na.rm = T)) / (max(x, na.rm = T) - min(x, na.rm=T)))
boxplot(dff)
}
idf=complete(imputed,2)
sum(is.na.data.frame(idf))
sapply(idf, function(x) sum(is.na.data.frame(x)))
# This two colomns have constant values
idf$StandardHours=80
idf$EmployeeCount=1
sapply(idf, function(x) sum(is.na.data.frame(x)))
sum(is.na.data.frame(idf))
library(VIM)
df_imputed_KNN = kNN(df[,y], k=5)
anyNA(df_imputed_KNN)
library(missForest)
set.seed(17)
##### https://www.rdocumentation.org/packages/missForest/versions/1.4/topics/missForest
df_imputed_Forest <- missForest(df[,y], variablewise=T, verbose=T)
df_imputed_Forest <- df_imputed_Forest$ximp
df_imputed_Forest<-data.frame(df_imputed_Forest)
anyNA(df_imputed_Forest)
RMSE <- function (original, imputed) sqrt(mean((original-imputed)^2))
#RMSE <- function (x, test) sum(x)-sum(test)
x <- mapply(original_df[,y], FUN = RMSE, idf)
print(x)
sum(x)
RMSE <- function (original, imputed) sqrt(mean((original-imputed)^2))
#RMSE <- function (x, test) sum(x)-sum(test)
x <- mapply(original_df[,y], FUN = RMSE, df_imputed_KNN)
print(x)
sum(x)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load("naniar","epiDisplay","mice","corrplot","ggplot2","FactoMineR","fitdistrplus")
df<-read.csv(file="WA_Fn-UseC_-HR-Employee-Attrition.csv")
df$Education<-factor(df$Education,levels=c(1,2,3,4,5), labels=c('Below College','College','Bachelor','Master','Doctor'))
df$EnvironmentSatisfaction<-factor(df$EnvironmentSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$JobSatisfaction<-factor(df$JobSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$JobInvolvement<-factor(df$JobInvolvement,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$PerformanceRating<-factor(df$PerformanceRating,levels=c(1,2,3,4), labels=c('Low','Good','Excellent','Outstanding'))
df$RelationshipSatisfaction<-factor(df$RelationshipSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$WorkLifeBalance<-factor(df$WorkLifeBalance,levels=c(1,2,3,4), labels=c('Bad','Good','Better','Best'))
df$JobLevel<-factor(df$JobLevel,levels=c(1,2,3,4,5), labels=c('Low','Medium','High','Very High','Highest'))
df$StockOptionLevel<-factor(df$StockOptionLevel,levels=c(0,1,2,3,4,5), labels=c('VeryLow','Low','Medium','High','Very High','Highest'))
df$BusinessTravel=replace(df$BusinessTravel, df$BusinessTravel=="Non-Travel",1)
df$BusinessTravel=replace(df$BusinessTravel, df$BusinessTravel=="Travel_Rarely",2)
df$BusinessTravel=replace(df$BusinessTravel, df$BusinessTravel=="Travel_Frequently",3)
df$BusinessTravel<-as.integer(df$BusinessTravel)
df$BusinessTravel<-factor(df$BusinessTravel,levels=c(1,2,3), labels=c("Non-Travel","Travel_Rarely","Travel_Frequently"))
df$Attrition[df$Attrition=="No"]=0
df$Attrition[df$Attrition=="Yes"]=1
adf=df
names(adf)=abbreviate(names(df))
abbreviate(names(df))
tab1(df$Attrition, sort.group = "decreasing", cum.percent = TRUE)
summary(df$Age)
boxplot
d=density(df$Age, kernel = "epanechnikov")
plot(d)
descdist(df$Age, boot=1000,boot.col = "red")
tab1(df$BusinessTravel)
summary(df$DailyRate)
boxplot(df$DailyRate)
d=density(df$DailyRate, kernel = "epanechnikov")
plot(d)
descdist(df$DailyRate, boot=1000,boot.col = "red")
tab1(df$Department)
summary(df$DistanceFromHome)
boxplot(df$DistanceFromHome)
tab1(df$Education)
tab1(df$EducationField)
summary(df$EmployeeNumber)
boxplot(df$EmployeeNumber)
tab1(df$EnvironmentSatisfaction)
tab1(df$Gender)
summary(df$HourlyRate)
boxplot(df$HourlyRate)
tab1(df$JobInvolvement)
tab1(df$JobLevel)
tab1(df$JobRole)
tab1(df$JobSatisfaction)
tab1(df$MaritalStatus)
summary(df$MonthlyIncome)
boxplot(df$MonthlyIncome)
summary(df$MonthlyRate)
boxplot(df$MonthlyRate)
summary(df$NumCompaniesWorked)
boxplot(df$NumCompaniesWorked)
tab1(df$Over18)
tab1(df$OverTime)
summary(df$PercentSalaryHike)
boxplot(df$PercentSalaryHike)
tab1(df$PerformanceRating)
tab1(df$RelationshipSatisfaction)
summary(df$StandardHours)
boxplot(df$StandardHours)
tab1(df$StockOptionLevel)
summary(df$TotalWorkingYears)
boxplot(df$TotalWorkingYears)
summary(df$TrainingTimesLastYear)
boxplot(df$TrainingTimesLastYear)
tab1(df$WorkLifeBalance)
summary(df$YearsAtCompany)
boxplot(df$YearsAtCompany)
summary(df$YearsInCurrentRole)
boxplot(df$YearsInCurrentRole)
summary(df$YearsSinceLastPromotion)
boxplot(df$YearsSinceLastPromotion)
summary(df$YearsWithCurrManager)
boxplot(df$YearsWithCurrManager)
dff$EmpC=NULL
dff$StnH=NULL
y=which(sapply(dff,is.numeric))
corrplot(cor(dff[,y]), type="upper")
pacman::p_load("naniar","epiDisplay","mice","corrplot","ggplot2","FactoMineR","fitdistrplus", "missForest", "VIM")
pacman::p_load("naniar","epiDisplay","mice","corrplot","ggplot2","FactoMineR","fitdistrplus", "missForest", "VIM","factoextra")
dim(oidf)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load("naniar","epiDisplay","mice","corrplot","ggplot2","FactoMineR","fitdistrplus", "missForest", "VIM","factoextra")
df<-read.csv(file="WA_Fn-UseC_-HR-Employee-Attrition.csv")
df$Education<-factor(df$Education,levels=c(1,2,3,4,5), labels=c('Below College','College','Bachelor','Master','Doctor'))
df$EnvironmentSatisfaction<-factor(df$EnvironmentSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$JobSatisfaction<-factor(df$JobSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$JobInvolvement<-factor(df$JobInvolvement,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$PerformanceRating<-factor(df$PerformanceRating,levels=c(1,2,3,4), labels=c('Low','Good','Excellent','Outstanding'))
df$RelationshipSatisfaction<-factor(df$RelationshipSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$WorkLifeBalance<-factor(df$WorkLifeBalance,levels=c(1,2,3,4), labels=c('Bad','Good','Better','Best'))
df$JobLevel<-factor(df$JobLevel,levels=c(1,2,3,4,5), labels=c('Low','Medium','High','Very High','Highest'))
df$StockOptionLevel<-factor(df$StockOptionLevel,levels=c(0,1,2,3,4,5), labels=c('VeryLow','Low','Medium','High','Very High','Highest'))
df$BusinessTravel=replace(df$BusinessTravel, df$BusinessTravel=="Non-Travel",1)
df$BusinessTravel=replace(df$BusinessTravel, df$BusinessTravel=="Travel_Rarely",2)
df$BusinessTravel=replace(df$BusinessTravel, df$BusinessTravel=="Travel_Frequently",3)
df$BusinessTravel<-as.integer(df$BusinessTravel)
df$BusinessTravel<-factor(df$BusinessTravel,levels=c(1,2,3), labels=c("Non-Travel","Travel_Rarely","Travel_Frequently"))
df$Attrition[df$Attrition=="No"]=0
df$Attrition[df$Attrition=="Yes"]=1
adf=df
names(adf)=abbreviate(names(df))
abbreviate(names(df))
tab1(df$Attrition, sort.group = "decreasing", cum.percent = TRUE)
summary(df$Age)
boxplot
d=density(df$Age, kernel = "epanechnikov")
plot(d)
descdist(df$Age, boot=1000,boot.col = "red")
tab1(df$BusinessTravel)
summary(df$DailyRate)
boxplot(df$DailyRate)
d=density(df$DailyRate, kernel = "epanechnikov")
plot(d)
descdist(df$DailyRate, boot=1000,boot.col = "red")
tab1(df$Department)
summary(df$DistanceFromHome)
boxplot(df$DistanceFromHome)
tab1(df$Education)
tab1(df$EducationField)
summary(df$EmployeeNumber)
boxplot(df$EmployeeNumber)
tab1(df$EnvironmentSatisfaction)
tab1(df$Gender)
summary(df$HourlyRate)
boxplot(df$HourlyRate)
tab1(df$JobInvolvement)
tab1(df$JobLevel)
tab1(df$JobRole)
tab1(df$JobSatisfaction)
tab1(df$MaritalStatus)
summary(df$MonthlyIncome)
boxplot(df$MonthlyIncome)
summary(df$MonthlyRate)
boxplot(df$MonthlyRate)
summary(df$NumCompaniesWorked)
boxplot(df$NumCompaniesWorked)
tab1(df$Over18)
tab1(df$OverTime)
summary(df$PercentSalaryHike)
boxplot(df$PercentSalaryHike)
tab1(df$PerformanceRating)
tab1(df$RelationshipSatisfaction)
summary(df$StandardHours)
boxplot(df$StandardHours)
tab1(df$StockOptionLevel)
summary(df$TotalWorkingYears)
boxplot(df$TotalWorkingYears)
summary(df$TrainingTimesLastYear)
boxplot(df$TrainingTimesLastYear)
tab1(df$WorkLifeBalance)
summary(df$YearsAtCompany)
boxplot(df$YearsAtCompany)
summary(df$YearsInCurrentRole)
boxplot(df$YearsInCurrentRole)
summary(df$YearsSinceLastPromotion)
boxplot(df$YearsSinceLastPromotion)
summary(df$YearsWithCurrManager)
boxplot(df$YearsWithCurrManager)
dff$EmpC=NULL
dff$StnH=NULL
y=which(sapply(dff,is.numeric))
corrplot(cor(dff[,y]), type="upper")
# We use 3
imputed=mice(df[,y], method='pmm', seed=500, maxit=15, m=3)
for (i in 1:3){
dff=complete(imputed,i)
dff=lapply(dff, function(x) (x - min(x, na.rm = T)) / (max(x, na.rm = T) - min(x, na.rm=T)))
boxplot(dff)
}
df_imputed_KNN = kNN(df[,y], k=5)
anyNA(df_imputed_KNN)
set.seed(17)
##### https://www.rdocumentation.org/packages/missForest/versions/1.4/topics/missForest
df_imputed_Forest <- missForest(df[,y], variablewise=T, verbose=T)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load("naniar","epiDisplay","mice","corrplot","ggplot2","FactoMineR","fitdistrplus", "missForest", "VIM","factoextra")
df<-read.csv(file="WA_Fn-UseC_-HR-Employee-Attrition.csv")
df$Education<-factor(df$Education,levels=c(1,2,3,4,5), labels=c('Below College','College','Bachelor','Master','Doctor'))
df$EnvironmentSatisfaction<-factor(df$EnvironmentSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$JobSatisfaction<-factor(df$JobSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$JobInvolvement<-factor(df$JobInvolvement,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$PerformanceRating<-factor(df$PerformanceRating,levels=c(1,2,3,4), labels=c('Low','Good','Excellent','Outstanding'))
df$RelationshipSatisfaction<-factor(df$RelationshipSatisfaction,levels=c(1,2,3,4), labels=c('Low','Medium','High','Very High'))
df$WorkLifeBalance<-factor(df$WorkLifeBalance,levels=c(1,2,3,4), labels=c('Bad','Good','Better','Best'))
df$JobLevel<-factor(df$JobLevel,levels=c(1,2,3,4,5), labels=c('Low','Medium','High','Very High','Highest'))
df$StockOptionLevel<-factor(df$StockOptionLevel,levels=c(0,1,2,3,4,5), labels=c('VeryLow','Low','Medium','High','Very High','Highest'))
df$BusinessTravel=replace(df$BusinessTravel, df$BusinessTravel=="Non-Travel",1)
df$BusinessTravel=replace(df$BusinessTravel, df$BusinessTravel=="Travel_Rarely",2)
df$BusinessTravel=replace(df$BusinessTravel, df$BusinessTravel=="Travel_Frequently",3)
df$BusinessTravel<-as.integer(df$BusinessTravel)
df$BusinessTravel<-factor(df$BusinessTravel,levels=c(1,2,3), labels=c("Non-Travel","Travel_Rarely","Travel_Frequently"))
df$Attrition[df$Attrition=="No"]=0
df$Attrition[df$Attrition=="Yes"]=1
adf=df
names(adf)=abbreviate(names(df))
abbreviate(names(df))
tab1(df$Attrition, sort.group = "decreasing", cum.percent = TRUE)
summary(df$Age)
boxplot
d=density(df$Age, kernel = "epanechnikov")
plot(d)
descdist(df$Age, boot=1000,boot.col = "red")
tab1(df$BusinessTravel)
summary(df$DailyRate)
boxplot(df$DailyRate)
d=density(df$DailyRate, kernel = "epanechnikov")
plot(d)
descdist(df$DailyRate, boot=1000,boot.col = "red")
tab1(df$Department)
summary(df$DistanceFromHome)
boxplot(df$DistanceFromHome)
tab1(df$Education)
tab1(df$EducationField)
summary(df$EmployeeNumber)
boxplot(df$EmployeeNumber)
tab1(df$EnvironmentSatisfaction)
tab1(df$Gender)
summary(df$HourlyRate)
boxplot(df$HourlyRate)
tab1(df$JobInvolvement)
tab1(df$JobLevel)
tab1(df$JobRole)
tab1(df$JobSatisfaction)
tab1(df$MaritalStatus)
summary(df$MonthlyIncome)
boxplot(df$MonthlyIncome)
summary(df$MonthlyRate)
boxplot(df$MonthlyRate)
summary(df$NumCompaniesWorked)
boxplot(df$NumCompaniesWorked)
tab1(df$Over18)
tab1(df$OverTime)
summary(df$PercentSalaryHike)
boxplot(df$PercentSalaryHike)
tab1(df$PerformanceRating)
tab1(df$RelationshipSatisfaction)
summary(df$StandardHours)
boxplot(df$StandardHours)
tab1(df$StockOptionLevel)
summary(df$TotalWorkingYears)
boxplot(df$TotalWorkingYears)
summary(df$TrainingTimesLastYear)
boxplot(df$TrainingTimesLastYear)
tab1(df$WorkLifeBalance)
summary(df$YearsAtCompany)
boxplot(df$YearsAtCompany)
summary(df$YearsInCurrentRole)
boxplot(df$YearsInCurrentRole)
summary(df$YearsSinceLastPromotion)
boxplot(df$YearsSinceLastPromotion)
summary(df$YearsWithCurrManager)
boxplot(df$YearsWithCurrManager)
dff$EmpC=NULL
dff$StnH=NULL
y=which(sapply(dff,is.numeric))
corrplot(cor(dff[,y]), type="upper")
y=which(sapply(df,is.numeric))   #posiciones de las columnas que son numéricas
n=dim(df)[1]                            #número de columnas del dataframe
N=sample(1:n,n*0.1)                   #coge el 10% de cada columna uniformemente distr.
n=length(y)                           #número de columnas numéricas
original_df = df                # copy of the original_df
for (i in N){
j=sample(1:length(y),1)         #in that 10% we put NA
df[i,y[[j]]]=NA
}
str(df)
sum(is.na.data.frame(df))
n=dim(df)[2]
lost=1:n
for (i in (1:n)){
lost[i]=sum(is.na(df[,i]))
}
names(lost)=names(df)
h=barplot(lost, las=2, cex.names = 0.9, xaxt="n")
text(cex=1, x=h, y=-1.25, names(df), xpd=TRUE, srt=45, pos=2)
boxplot(df[,y])
dff=lapply(df[,y], function(x) (x - min(x, na.rm = T)) / (max(x, na.rm = T) - min(x, na.rm=T)))
boxplot(dff)
mcar_test(as.data.frame(dff))
# We use 3
imputed=mice(df[,y], method='pmm', seed=500, maxit=15, m=3)
for (i in 1:3){
dff=complete(imputed,i)
dff=lapply(dff, function(x) (x - min(x, na.rm = T)) / (max(x, na.rm = T) - min(x, na.rm=T)))
boxplot(dff)
}
idf=complete(imputed,2)
sum(is.na.data.frame(idf))
sapply(idf, function(x) sum(is.na.data.frame(x)))
# This two colomns have constant values
idf$StandardHours=80
idf$EmployeeCount=1
sapply(idf, function(x) sum(is.na.data.frame(x)))
sum(is.na.data.frame(idf))
df_imputed_KNN = kNN(df[,y], k=5)
anyNA(df_imputed_KNN)
set.seed(17)
##### https://www.rdocumentation.org/packages/missForest/versions/1.4/topics/missForest
df_imputed_Forest <- missForest(df[,y], variablewise=T, verbose=T)
df_imputed_Forest <- df_imputed_Forest$ximp
df_imputed_Forest<-data.frame(df_imputed_Forest)
anyNA(df_imputed_Forest)
RMSE <- function (original, imputed) sqrt(mean((original-imputed)^2))
x <- mapply(original_df[,y], FUN = RMSE, idf)
print(x)
sum(x)
RMSE <- function (original, imputed) sqrt(mean((original-imputed)^2))
x <- mapply(original_df[,y], FUN = RMSE, idf)
print(x)
sum(x)
x <- mapply(original_df[,y], FUN = RMSE, df_imputed_Forest)
print(x)
sum(x)
x <- mapply(original_df[,y], FUN = RMSE, df_imputed_KNN)
print(x)
sum(x)
idf$StandardHours=NULL
idf$EmployeeCount=NULL
m=mahalanobis(idf,center=colMeans(idf),cov(idf))
m=pchisq(m,df=dim(idf)[2]-1, lower.tail = FALSE)
ind=which(m<0.001)
length(ind)
oidf=idf[-ind,]
df_categoric = df[-y]
df_pca <- merge(oidf,df_categoric, by="row.names")
df_pca$Row.names <- NULL
pca <- PCA(df_pca, quali.sup = c(16:33), graph = FALSE);
eig.val <- get_eigenvalue(pca)
eig.val
fviz_eig(pca, addlabels = TRUE, ylim = c(0, 35))
var <- get_pca_var(pca)
var$coord
var$contrib
fviz_pca_var(pca, col.var = "black", repel = TRUE, title ="Correlation circle")
var$cos2
corrplot::corrplot(t(var$cos2), is.corr = F)
fviz_pca_var(pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
title = "Cos2 of the variables in PC 1-2"
)
fviz_pca_biplot(pca, repel = TRUE,
col.var = "#2E9FDF", # Variables color
col.ind = "#696969"  # Individuals color
)
fviz_pca_ind(pca, habillage = 16,
addEllipses =TRUE,
ellipse.type = "confidence",
palette = "jco",
repel = TRUE,
label="none")
dim(oidf)
df_categoric = df[-y]
df_mfa <- merge(oidf,df_categoric, by="row.names")
dim(df_mfa)
res.mfa <- MFA(df_mfa)
